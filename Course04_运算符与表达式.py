'''
main.py                /* 当前文件名 */
Course04_运算符与表达式    /* 当前工程名 */

Created by SuHan on December, 16 2015.  /* 创建日期 */
Copyright (c) 2015年 www.china-node.com. All rights reserved.  /* 版权说明 */
'''

'''
1.运算符
    运算符的作用是对数据进行比较或者操作,例如我想要比较两个整数的大小,这时你就需要用到关系运算符,例如:> < == 等.在python中我们主要学习
如下几种操作符:1.赋值运算符;2.算数运算符;3.条件运算符,4.逻辑运算符,5.按位运算符
'''
if False:
    pass
else:
    pass

    '''
    1.1赋值运算符
    在将变量时我们曾提到了变量与内存的关系,那么这个赋值运算符的作用就是将变量与数据相关联
    '''
    if False:
        #思考在下面三个语句中,赋值运算符的处理过程
        a = 1
        b = 2
        a = b
    else:
        pass
    '''
    1.2算数运算符
    算术运算符可以帮助我们在变量间执行数学计算,这些计算包括 + - * / += -= *= /= % //
    '''
    if False:
        #我们来看看常见的4中数学运算在python中的执行过程
        var_1 = 1
        var_2 = 2
        print(var_1 + var_2)
        print(var_1 - var_2)
        print(var_1 * var_2)
        print(var_1 / var_2)

        #除了基本的运算外我们还可以通过%进行取余操作
        print(15 % 6)

        #还有通过//进行的取整操作
        print(15 // 6)

        #自增自减自乘自除运算
        var_3 = 10
        var_3 += 1
        print(var_3)
        var_3 -= 1
        print(var_3)
        var_3 *= 2
        print(var_3)
        var_3 /= 2
        print(var_3)
    else:
        pass

    '''
    1.3条件运算符
    条件运算符主要用于比较运算,返回的结果只有两种情况,True或者False
    条件运算符包括:> < == >= <= !=
    '''
    if False:
        #练习这几个操作副的用法,观察返回值
        var_bool_1 = 1 > 2
        var_bool_2 = 1 == 2
        var_bool_3 = 1 >= 2
        var_bool_4 = 1 != 2
        print(var_bool_1,var_bool_2,var_bool_3,var_bool_4)

        #注意问题!
        #我们需要对 == 这个运算符加深印象,因为这个运算符经常被学院与 = 赋值运算符混淆
    else:
        pass

    '''
    1.4逻辑运算符
    逻辑运算有三种,分别是:1.与(and);2.或(or);3.非(not)
    因为在某些情况下我们需要先判断很多事情的完成情况,然后再决定下一个事情是否执行,这种情况下,逻辑运算符就起到了重要作用
    比如,我要求在a,b,c都完成的时候再去做d,那么我就可以这样表达给计算机(if a and b and c;then do d)这个表达式描述了,只有在
    a,b,c三个条件都为真的时候,再去执行c,这就是计算机的逻辑运算
    '''
    if False:
        #观察下面表达式的输出是否有问题
        #表达式的执行顺序是我们需要考虑的重要问题
        #我们可以这样简单的记住在python中运算符的操作顺序:算术运算符 > 条件运算符 > 逻辑运算符
        #所以在这个例子中执行顺序是这样的:((2>1) and (4>3))
        print(2>1 and 4>3)

        #计算该表达式的输出
        print(2 and 1 > 3 or not 1 > 3)
        #由于python 2的一些不合理机制,导致逻辑运算可以操作数值类型的数据,但是只建议用逻辑运算符操作bool类型的数据
        print(2 and True)
        print(True and 2)
        print(not 1)
    else:
        pass

    '''
    1.5按位运算符
    按位运算是应用到两个
    '''
    if True:
        #观察下面表达式的输出
        #理解按位与的概念
        #2:10;3:11,二者向与后的结果为10,等于十进制2
        print(2&3)

        #通过下面输出,可以发现在我们学过的几种数据类型中,只有set(集合)可以想整数一样进行按位逻辑运算
        #print(2.1&3)
        #print('a'&'c')
        #print([1,2,3]&[2,3,4])
        #print((1,2,3)&(2,3,4))
        print({1,2,3}&{2,3,4})
        #print({1:'a',2:'b',3:'c'}&{2:'b',3:'c',4:'d'})
    else:
        pass

'''
2.表达式
表达式是变量,常量,运算符的组合,每个表达式都一定会有它自己的运算结果,这个结果可以是任意类型的值
'''
if True:
    #验证不同表达式的返回值类型
    print(type(3 + 5))
    print(type(3 > 5))
    print(type(3 & 5))
    print(type(True and False))
else:
    pass

